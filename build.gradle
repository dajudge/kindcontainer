plugins {
    id "java"
    id "java-library"
    id "maven-publish"
    id "com.palantir.git-version" version "0.15.0"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

def versionDetails = versionDetails()
version versionDetails.isCleanTag && gitVersion().startsWith("release/")
        ? gitVersion().substring("release/".length())
        : System.currentTimeMillis() + "-SNAPSHOT"
println "Build version $version"

apply from: "${rootProject.projectDir}/publishing.gradle"
apply from: "${rootProject.projectDir}/signing.gradle"
apply from: "${rootProject.projectDir}/codegen.gradle"

ext {
    testcontainersVersion = "1.17.6"
    junitVersion = "5.9.1"
}

dependencies {
    api "org.testcontainers:testcontainers:$testcontainersVersion"
    implementation "org.bouncycastle:bcpkix-jdk15on:1.70"

    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "io.fabric8:kubernetes-client:6.3.0"
    testImplementation "org.awaitility:awaitility:4.2.0"
    testImplementation "org.mockito:mockito-core:4.9.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testRuntimeOnly "ch.qos.logback:logback-classic:1.2.5"
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    // suppress completely stupid stacktrace dump by fabric8
    systemProperty "kubernetes.disable.autoConfig", "true"

    environment 'TESTCONTAINERS_REUSE_ENABLE', 'true'
    environment 'CONTAINER_FILTER', System.getenv("CONTAINER_FILTER")

    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
    }
}
